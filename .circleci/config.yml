defaults: &defaults
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    environment:
      MAVEN_OPTS: -Xmx3200m
      _JAVA_OPTIONS: "-Xms1g -Xmx1g"

version: 2
jobs:
  closure_library:
    <<: *defaults
    working_directory: ~/
    steps:
      - restore_cache:
          keys:
            - v1-closure-library
      - run:
          name: 
          command: |
            if [ -e closure-library ]; then
              # if the cache contained it, let's just update
              echo update from remote

              cd closure-library
              git remote update
              git pull
            else
              echo cloning repository
              git clone git@github.com:google/closure-library.git
            fi
      - save_cache:
          key: v1-closure-library
          paths:
            - ~/closure-library

  build:
    <<: *defaults
    working_directory: ~/j2cl
    steps:
      - checkout
      - run:
          name: environment check
          command: |
            java -XX:+PrintFlagsFinal -version | grep -iE 'HeapSize|PermSize|ThreadStackSize'
            env MAVEN_OPTS="-XX:+PrintFlagsFinal" mvn -version | grep -iE 'HeapSize|PermSize|ThreadStackSize'
            mvn -version

      - restore_cache:
          keys:
            - v0.25.2-bazel-installer
      - run:
          name: bazel
          working_directory: ~/
          command: |
            bazel_version=0.25.2
            if [ ! -e bazel-${bazel_version}-installer-linux-x86_64.sh ]; then 
              curl -O -L https://github.com/bazelbuild/bazel/releases/download/$bazel_version/bazel-${bazel_version}-installer-linux-x86_64.sh
              chmod +x bazel*.sh
            fi
            ./bazel-${bazel_version}-installer-linux-x86_64.sh --user
      - save_cache:
          key: v0.25.2-bazel-installer
          paths:
            - ~/*.sh

      - run:
          name: update remote
          command: |
            echo rebasing onto upstream
            set +e
            git remote get-url upstream
            if [ $? != 0 ]; then
              echo adding google remote
              git remote add upstream git@github.com:google/j2cl.git
            fi
            set -e
            echo setup local git user
            git config --global user.email "sales@vertispan.com"
            git config --global user.name "Vertispan CI"
            echo git remote update
            git remote update
            echo git checkout origin/master
            git checkout origin/master

            echo starting rebase on upstream/master
            set +e
            git rebase upstream/master
            exitCode=$?;
            set -e

            if [ $exitCode != 0 ]; then
              # not really needed
              echo rebase failure
              git rebase --abort
              exit $exitCode;
            fi

      - restore_cache:
          keys:
            - v1-closure-library

      - run:
          name: build
          command: |
            bazel clean --expunge

            cd maven
            ./build.sh


workflows:
  version: 2
  ci_build:
    jobs:
      - closure_library
      - build:
          requires:
            - closure_library

